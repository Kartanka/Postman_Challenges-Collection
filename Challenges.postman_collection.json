{
	"info": {
		"_postman_id": "e715c7a0-87ce-4f27-ae26-0c01b54b58a3",
		"name": "Challenges",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21275031"
	},
	"item": [
		{
			"name": "POST Challenger",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{URL}}/challenger",
					"host": [
						"{{URL}}"
					],
					"path": [
						"challenger"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /challenges (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/challenges",
					"host": [
						"{{URL}}"
					],
					"path": [
						"challenges"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"var ids = jsonData.todos.map(function (elem) {\r",
							"    return elem.id;\r",
							"})\r",
							"postman.setEnvironmentVariable(\"id\", ids[0]);\r",
							"postman.setEnvironmentVariable(\"ids\", ids);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos/{id} (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"ids_array = pm.environment.get(\"ids\").split(\",\")\r",
							"var random_num = Math.floor(Math.random() * 1000);\r",
							"while (ids_array.indexOf(random_num) != -1) {\r",
							"    random_num = Math.floor(Math.random() * 1000);\r",
							"}\r",
							"postman.setEnvironmentVariable(\"invalid_id\", random_num); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos/{{invalid_id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"{{invalid_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todo (404) not plural",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todo",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "HEAD /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "HEAD",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /todos (201)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"eat cookies\",\r\n  \"doneStatus\": true,\r\n  \"description\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos (200) ?filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"eat cookies\",\r\n  \"doneStatus\": true,\r\n  \"description\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos?doneStatus=true",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /todos (400) doneStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"eat cookies\",\r\n  \"doneStatus\": done,\r\n  \"description\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"doneStatus\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos/{{id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "OPTIONS /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos (200) XML",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type header is application/xml\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/xml');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos (200) JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos (200) ANY",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos (200) XML pref",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type header is application/xml\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/xml');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml, application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos (200) no accept",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"var ids = jsonData.todos.map(function (elem) {\r",
							"    return elem.id;\r",
							"})\r",
							"postman.setEnvironmentVariable(\"id\", ids[0]);\r",
							"postman.setEnvironmentVariable(\"ids\", ids);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml, application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos (406)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 406\", function () {\r",
							"    pm.response.to.have.status(406);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/gzip",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /todos XML",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Content-Type header is application/xml\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/xml');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<todo>\r\n  <doneStatus>true</doneStatus>\r\n  <description></description>\r\n  <title>chill 'n flex</title>\r\n</todo>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /todos JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"back to work\",\r\n  \"doneStatus\": true,\r\n  \"description\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /todos (415)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 415\", function () {\r",
							"    pm.response.to.have.status(415);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/octet-stream",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "audio/basic",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": ""
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /todos XML to JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<todo>\r\n  <doneStatus>false</doneStatus>\r\n  <description></description>\r\n  <title>test combinations</title>\r\n</todo>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /todos JSON to XML",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Content-Type header is application/xml\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/xml');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"security call\",\r\n  \"doneStatus\": false,\r\n  \"description\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /heartbeat (405)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/heartbeat",
					"host": [
						"{{URL}}"
					],
					"path": [
						"heartbeat"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH /heartbeat (500)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/heartbeat",
					"host": [
						"{{URL}}"
					],
					"path": [
						"heartbeat"
					]
				}
			},
			"response": []
		},
		{
			"name": "TRACE /heartbeat (501)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 501\", function () {\r",
							"    pm.response.to.have.status(501);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "TRACE",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/heartbeat",
					"host": [
						"{{URL}}"
					],
					"path": [
						"heartbeat"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /heartbeat (204)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/heartbeat",
					"host": [
						"{{URL}}"
					],
					"path": [
						"heartbeat"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /secret/token (401)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "not_password",
							"type": "string"
						},
						{
							"key": "username",
							"value": "notadmin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/token",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"token"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /secret/token (201)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/token",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"token"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /secret/note (403)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Auth-Token",
						"value": "invalid_token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/note",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"note"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /secret/note (401)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/note",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"note"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /secret/note (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response body contains the note\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.note).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-Auth-Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/note",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"note"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /secret/note (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response body contains the note\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.note).to.equal(\"custom note\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-Auth-Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"note\": \"custom note\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/note",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"note"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /secret/note (401)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-Auth-Token}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"note\": \"custom note\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/note",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"note"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /secret/note (403)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Auth-Token",
						"value": "invalid_token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"note\": \"custom note\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/note",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"note"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /secret/note (Bearer)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response body contains the note\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.note).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{X-Auth-Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-Auth-Token}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/note",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"note"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /secret/note (Bearer)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Note is less or equal 100 characters\", function () {\r",
							"    var jsonData = pm.response.json().note;\r",
							"    pm.expect(jsonData.length<=100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{X-Auth-Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text",
						"disabled": true
					},
					{
						"key": "X-Auth-Token",
						"value": "{{X-Auth-Token}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"note\": \"custom note should be less then 100 characters. if it is more than 100 characters, it will be truncated when stored.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/secret/note",
					"host": [
						"{{URL}}"
					],
					"path": [
						"secret",
						"note"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /todos/{id} (200) all",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const ids_to_delete = JSON.parse(pm.environment.get(\"ids_to_delete\"));\r",
							"\r",
							"if (ids_to_delete && ids_to_delete.length > 0){\r",
							"    postman.setNextRequest(\"DELETE /todos/{id} (200) all\");\r",
							"} else {\r",
							"    postman.setNextRequest(null);\r",
							"    pm.environment.unset(\"current_id\");\r",
							"    pm.environment.unset(\"ids_to_delete\");\r",
							"}\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var ids_to_delete_str = pm.environment.get(\"ids_to_delete\");\r",
							"var ids_to_delete;\r",
							"\r",
							"if (ids_to_delete_str && ids_to_delete_str.length > 0) {\r",
							"    ids_to_delete = JSON.parse(ids_to_delete_str);\r",
							"}\r",
							"\r",
							"if (!ids_to_delete || ids_to_delete.length == 0) {\r",
							"    ids_to_delete = pm.environment.get(\"ids\").split(\",\"); \r",
							"}\r",
							"console.log(ids_to_delete);\r",
							"let current_id = ids_to_delete.shift();\r",
							"console.log(ids_to_delete);\r",
							"postman.setEnvironmentVariable(\"current_id\", current_id);\r",
							"postman.setEnvironmentVariable(\"ids_to_delete\", JSON.stringify(ids_to_delete));\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{X-Challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos/{{current_id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"{{current_id}}"
					]
				}
			},
			"response": []
		}
	]
}